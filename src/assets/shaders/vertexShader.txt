#version 400 core

// THE VERTEX SHADER
// THIS IS WHERE THE TRANSFORMATION MATRIX ACTUALLY TRANSFORMS THE MODEL
// THIS IS WHERE THE VIEW MATRIX TRANSFORMS THE MODELS BASED ON CAMERA MOVEMENT

in vec3 position;
in vec2 textureCoords;
in vec3 normal;

out vec2 pass_textureCoords;
out vec3 surfaceNormal;
out vec3 towardsLightVector;

uniform mat4 transformMatrix; //transform of model
uniform mat4 projectionMatrix; //projection/perspective view camera
uniform mat4 viewMatrix; //matrix opposite of camera movement
uniform vec3 lightPosition;

void main(void){

    vec4 worldPosition = transformMatrix * vec4(position, 1.0);
    gl_Position = projectionMatrix * viewMatrix * worldPosition;

    pass_textureCoords = textureCoords;
    surfaceNormal = (transformMatrix * vec4(normal, 0.0)).xyz;
    towardsLightVector = lightPosition - worldPosition.xyz;

}